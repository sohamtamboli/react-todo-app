{"version":3,"sources":["components/TodoInput.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInput","input","setInput","todoList","setTodoList","className","type","placeholder","value","onChange","e","target","onClick","text","completed","Todo","useState","flag","setFlag","size","color","name","TodoList","map","singleTodo","index","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAmCeA,MAjCf,YAAgE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAc/C,OACC,8BACC,sBAAKC,UAAU,kBAAf,UACC,uBACCC,KAAK,OACLC,YAAY,mBACZF,UAAU,cACVG,MAAOP,EACPQ,SArBiB,SAACC,GACrBR,EAASQ,EAAEC,OAAOH,UAsBhB,wBAAQI,QApBI,SAACF,GACfN,EAAY,GAAD,mBACPD,GADO,CAEV,CACCU,KAAMZ,EACNa,WAAW,MAGbZ,EAAS,KAYkBG,UAAU,eAAnC,uBCAWU,MAxBf,YAAyB,IAATF,EAAQ,EAARA,KAAQ,EACCG,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KAMvB,OACC,sBAAKb,UAAU,aAAf,UACC,oBAAIA,UAAWY,EAAO,OAAS,YAA/B,SAA6CJ,IAC7C,qBAAKD,QAPS,WACfM,GAASD,IAMR,SACEA,EACA,qBAAKZ,UAAU,kBAAf,SACC,0BAAUc,KAAK,KAAKC,MAAM,OAAOC,KAAK,QAGvC,qBAAKhB,UAAU,gBAAf,SACC,0BAAUc,KAAK,KAAKC,MAAM,OAAOC,KAAK,kBCH7BC,MAZf,YAAiC,IAAbnB,EAAY,EAAZA,SACnB,OACC,qBAAKE,UAAU,iBAAf,SACC,6BACEF,EAASoB,KAAI,SAACC,EAAYC,GAAb,OACb,cAAC,EAAD,CAAMZ,KAAMW,EAAWX,MAAWY,WCwBxBC,MA3Bf,WAAgB,IAAD,EACYV,mBAAS,IADrB,mBACPf,EADO,KACAC,EADA,OAEkBc,mBAAS,IAF3B,mBAEPb,EAFO,KAEGC,EAFH,KAId,OACC,sBAAKC,UAAU,MAAf,UACC,sBAAKA,UAAU,SAAf,UACC,8CACA,mBACCA,UAAU,cACVsB,KAAK,iDAFN,SAGC,0BAAUR,KAAK,KAAKC,MAAM,OAAOd,KAAK,OAAOe,KAAK,gBAGpD,sBAAKhB,UAAU,iBAAf,UACC,cAAC,EAAD,CACCJ,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,IAEd,cAAC,EAAD,CAAUD,SAAUA,EAAUC,YAAaA,WCdhCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8e0670a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoInput({ input, setInput, todoList, setTodoList }) {\n\tconst getInputText = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\tconst submit = (e) => {\n\t\tsetTodoList([\n\t\t\t...todoList,\n\t\t\t{\n\t\t\t\ttext: input,\n\t\t\t\tcompleted: false,\n\t\t\t},\n\t\t]);\n\t\tsetInput(\"\");\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<div className='input-container'>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Add your Todo...'\n\t\t\t\t\tclassName='input-field'\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={getInputText}\n\t\t\t\t/>\n\t\t\t\t<button onClick={submit} className='input-button'>\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t\t{/* <h1> {input} </h1> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TodoInput;\n","import React, { useState } from \"react\";\n\nfunction Todo({ text }) {\n\tconst [flag, setFlag] = useState(false);\n\tconst addDone = () => {\n\t\tsetFlag(!flag);\n\t};\n\n\treturn (\n\t\t<div className='list-items'>\n\t\t\t<li className={flag ? \"done\" : \"list-item\"}>{text}</li>\n\t\t\t<div onClick={addDone}>\n\t\t\t\t{flag ? (\n\t\t\t\t\t<div className='incomplete-icon'>\n\t\t\t\t\t\t<box-icon size='md' color='#fff' name='x'></box-icon>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className='complete-icon'>\n\t\t\t\t\t\t<box-icon size='md' color='#fff' name='check'></box-icon>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ todoList }) {\n\treturn (\n\t\t<div className='list-container'>\n\t\t\t<ul>\n\t\t\t\t{todoList.map((singleTodo, index) => (\n\t\t\t\t\t<Todo text={singleTodo.text} key={index} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState([]);\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<div className='header'>\n\t\t\t\t<h1> Your Todos </h1>\n\t\t\t\t<a\n\t\t\t\t\tclassName='github-link'\n\t\t\t\t\thref='https://github.com/sohamtamboli/react-todo-app'>\n\t\t\t\t\t<box-icon size='lg' color='#fff' type='logo' name='github'></box-icon>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div className='list-container'>\n\t\t\t\t<TodoInput\n\t\t\t\t\tinput={input}\n\t\t\t\t\tsetInput={setInput}\n\t\t\t\t\ttodoList={todoList}\n\t\t\t\t\tsetTodoList={setTodoList}\n\t\t\t\t/>\n\t\t\t\t<TodoList todoList={todoList} setTodoList={setTodoList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}